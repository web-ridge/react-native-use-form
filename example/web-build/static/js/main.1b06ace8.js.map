{"version":3,"file":"static/js/main.1b06ace8.js","mappings":"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","sources":["../src/utils.ts","../src/translations/utils.ts","../src/objectPath.ts","../src/useRefState.ts","../src/numberRaw.ts","../src/useInputs.ts","../src/checkError.ts","../src/hasVirtualKeyboard.ts","../src/useFormState.ts","../src/useTouched.ts","../src/useValues.ts","../src/useFocusedOnce.ts","../src/useWasSubmitted.ts","../src/useLayout.ts","../src/layoutUtil.web.ts","../src/useErrors.ts","../src/useSubmit.ts","../src/useNextAndSubmitRef.ts","../src/FormContext.tsx","../src/Form.tsx","../src/ScrollView.tsx","../src/translations/nl.ts","../src/translations/en.ts","src/TextInputWithError.tsx","src/App.tsx","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/create fake namespace object","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/publicPath","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["// Copied from https://github.com/wsmd/react-use-form-state\n\n// MIT License\n//\n// Copyright (c) 2018 Waseem Dahman\n\nimport * as React from 'react';\n\nexport function useMap() {\n  const map = React.useRef(new Map());\n  return {\n    set: (key: string, value: (...args: any) => any) =>\n      map.current.set(key, value),\n    has: (key: string) => map.current.has(key),\n    get: (key: string) => map.current.get(key),\n  };\n}\n\nexport function useReferencedCallback() {\n  const callbacks = useMap();\n  return (key: string, current: (args: any) => any) => {\n    if (!callbacks.has(key)) {\n      // @ts-ignore\n      const callback = (...args) => callback.current(...args);\n      callbacks.set(key, callback);\n    }\n    callbacks.get(key).current = current;\n    return callbacks.get(key);\n  };\n}\n\nexport function useLatest<T>(value: T): { readonly current: T } {\n  const ref = React.useRef(value);\n  ref.current = value;\n  return ref;\n}\n\nexport function reverse(str: string) {\n  let reversed = '';\n  for (let character of str) {\n    reversed = character + reversed;\n  }\n  return reversed;\n}\n\nexport function isEmptyNumber(str: number) {\n  return !str && str !== 0;\n}\n\nexport function checkErrorObject(errors: any) {\n  const keys = Object.keys(errors);\n  for (let key of keys) {\n    if (isObject(errors[key])) {\n      if (checkErrorObject(errors[key])) {\n        return true;\n      }\n    } else {\n      if (errors[key]) {\n        return true;\n      }\n    }\n  }\n  return false;\n}\n\nfunction isObject<T>(val: T) {\n  if (val === null) {\n    return false;\n  }\n  return typeof val === 'function' || typeof val === 'object';\n}\n\nexport function removeEmpty<\n  T extends { [s: string]: unknown } | ArrayLike<unknown>\n>(obj: T): T {\n  return Object.fromEntries(\n    Object.entries(obj).filter(([_, v]) => v !== undefined)\n  ) as any;\n}\n","interface FieldParams {\n  fieldKey: string;\n  label: string | undefined;\n}\ninterface FieldLengthParams extends FieldParams {\n  requiredLength: number;\n}\ninterface RegexParams extends FieldParams {\n  errorMessage: string | undefined;\n}\n\nexport interface TranslationsType {\n  required: (params: FieldParams) => string;\n  lengtShouldBeLongerThan: (params: FieldLengthParams) => string;\n  lengthShouldBeShorterThan: (params: FieldLengthParams) => string;\n  shouldFollowRegex: (params: RegexParams) => string;\n}\n\nlet translationsPerLocale: Record<string, TranslationsType> = {};\nexport let defaultLocale = 'en';\nexport function getTranslation<K extends keyof TranslationsType>(\n  locale: string | undefined,\n  key: K\n): TranslationsType[K] {\n  const l = locale || defaultLocale;\n  const translationForLocale = translationsPerLocale[l];\n  if (!translationForLocale) {\n    console.warn(\n      `[react-native-use-form] ${locale} is not registered, key: ${key}`\n    );\n  }\n  const translation = translationsPerLocale?.[l]?.[key];\n  if (!translation) {\n    console.warn(\n      `[react-native-use-form] ${locale} is registered, but ${key} is missing`\n    );\n  }\n  return (translation || key) as any;\n}\nexport function registerDefaultLocale(locale: string) {\n  defaultLocale = locale;\n}\nexport function registerTranslation(\n  locale: string,\n  translations: TranslationsType\n) {\n  translationsPerLocale[locale] = translations;\n}\n","// The MIT License (MIT)\n//\n// Copyright (c) 2015 Mario Casciaro\n// https://github.com/mariocasciaro/object-path-immutable/blob/master/LICENSE\n// edited by Richard Lindhout\n\nlet _hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction hasShallowProperty(obj: any, prop: any) {\n  return (\n    (typeof prop === 'number' && Array.isArray(obj)) ||\n    hasOwnProperty(obj, prop)\n  );\n}\n\nfunction hasOwnProperty(obj: any, prop: any) {\n  if (obj == null) {\n    return false;\n  }\n  //to handle objects with null prototypes (too edge case?)\n  return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n\nfunction getShallowProperty(obj: any, prop: any) {\n  if (hasShallowProperty(obj, prop)) {\n    return obj[prop];\n  }\n}\n\nfunction isEmpty(value: any) {\n  if (isNumber(value)) {\n    return false;\n  }\n  if (!value) {\n    return true;\n  }\n  if (isArray(value) && value.length === 0) {\n    return true;\n  } else if (!isString(value)) {\n    for (let i in value) {\n      if (_hasOwnProperty.call(value, i)) {\n        return false;\n      }\n    }\n    return true;\n  }\n  return false;\n}\n\nfunction isNumber(value: any) {\n  return typeof value === 'number';\n}\n\nfunction isString(obj: any) {\n  return typeof obj === 'string';\n}\n\nfunction isArray(obj: any) {\n  return Array.isArray(obj);\n}\n\nfunction assignToObj(target: any, source: any) {\n  for (let key in source) {\n    if (_hasOwnProperty.call(source, key)) {\n      target[key] = source[key];\n    }\n  }\n  return target;\n}\n\nfunction getKey(key: any) {\n  let intKey = parseInt(key);\n  if (intKey.toString() === key) {\n    return intKey;\n  }\n  return key;\n}\n\nfunction clone(obj: any, createIfEmpty: any, assumeArray: any) {\n  if (obj == null) {\n    if (createIfEmpty) {\n      if (assumeArray) {\n        return [];\n      }\n\n      return {};\n    }\n\n    return obj;\n  } else if (isArray(obj)) {\n    return obj.slice();\n  }\n\n  return assignToObj({}, obj);\n}\n\nfunction _changeImmutable(\n  dest: any,\n  src: any,\n  path: any,\n  changeCallback: any\n): any {\n  if (isNumber(path)) {\n    path = [path];\n  }\n  if (isEmpty(path)) {\n    return src;\n  }\n  if (isString(path)) {\n    return _changeImmutable(\n      dest,\n      src,\n      path.split('.').map(getKey),\n      changeCallback\n    );\n  }\n  let currentPath = path[0];\n\n  if (!dest || dest === src) {\n    dest = clone(src, true, isNumber(currentPath));\n  }\n\n  if (path.length === 1) {\n    return changeCallback(dest, currentPath);\n  }\n\n  if (src != null) {\n    src = src[currentPath];\n  }\n\n  dest[currentPath] = _changeImmutable(\n    dest[currentPath],\n    src,\n    path.slice(1),\n    changeCallback\n  );\n\n  return dest;\n}\n\nfunction set<T>(dest: any, src: any, path: string, value?: any): T {\n  if (isEmpty(path)) {\n    return value;\n  }\n  return _changeImmutable(dest, src, path, (clonedObj: any, finalPath: any) => {\n    clonedObj[finalPath] = value;\n    return clonedObj;\n  });\n}\n\nexport function deepGet<V>(obj: any, path: any): V {\n  if (typeof path === 'number') {\n    path = [path];\n  }\n  if (!path || path.length === 0) {\n    return obj;\n  }\n\n  if (typeof path === 'string') {\n    if (path.includes('.')) {\n      return deepGet(obj, path.split('.')) as any;\n    } else {\n      return obj[path];\n    }\n  }\n\n  let currentPath = getKey(path[0]);\n  let nextObj = getShallowProperty(obj, currentPath);\n  if (nextObj === void 0) {\n    return undefined as any;\n  }\n\n  if (path.length === 1) {\n    return nextObj;\n  }\n\n  return deepGet(obj[currentPath], path.slice(1));\n}\n\nexport const deepSet = set.bind(null, null);\n","import * as React from 'react';\n\n/**\n * Determines if the given param is an object. {}\n * @param obj\n */\nexport const isObject = (obj: any): obj is object =>\n  Object.prototype.toString.call(obj) === '[object Object]';\n\nconst useMounted = () => {\n  const mounted = React.useRef(false);\n  React.useEffect(() => {\n    mounted.current = true;\n    return () => {\n      mounted.current = false;\n    };\n  }, []);\n  return mounted;\n};\n\nexport function useRefState<S>(\n  initialState: S | (() => S),\n  blockIfUnmounted: boolean = true\n): [React.MutableRefObject<S>, React.Dispatch<React.SetStateAction<S>>] {\n  const mounted = useMounted();\n  const [reactState, setReactState] = React.useState(initialState);\n  const state = React.useRef(reactState);\n  const setState = React.useCallback(\n    (arg: any) => {\n      if (!mounted.current && blockIfUnmounted) return;\n      state.current = typeof arg === 'function' ? arg(state.current) : arg;\n      setReactState(state.current);\n    },\n    [blockIfUnmounted, mounted]\n  );\n  return [state, setState];\n}\n\nexport default useRefState;\n","import type {\n  Customizing,\n  DotNestedKeys,\n  FormTextInputProps,\n  FieldsLastCharacters,\n  GetFieldType,\n} from './types';\nimport { deepGet, deepSet } from './objectPath';\nimport { isEmptyNumber, reverse } from './utils';\nimport * as React from 'react';\nimport useRefState from './useRefState';\nimport type { ReferencedCallback } from './types';\n\nexport function useNumberRaw<T>({\n  locale,\n  referencedCallback,\n}: {\n  locale: string;\n  referencedCallback: ReferencedCallback;\n}) {\n  const [lastCharacters, setLastCharacters] = useRefState<\n    FieldsLastCharacters<T>\n  >({});\n  const separationCharacter = React.useMemo(() => {\n    const hasIntlSupport = typeof Intl !== 'undefined';\n    if (hasIntlSupport) {\n      const formatter = new Intl.NumberFormat(locale);\n      const formatted = formatter.format(1.1);\n      return formatted.includes(',') ? ',' : '.';\n    }\n    console.warn(\n      '[react-native-use-form] please upgrade React Native to provide Intl support to detect separation character'\n    );\n    return '.';\n  }, [locale]);\n  return <K extends DotNestedKeys<T>>(\n    k: K,\n    h: Customizing<T, K> | undefined,\n    values: T,\n    changeValue: (k: K, v: GetFieldType<T, K>, h?: Customizing<T, K>) => void\n  ): Pick<FormTextInputProps, 'onChangeText' | 'value'> => {\n    const deepValue = deepGet(values, k) as number;\n    const value = `${isEmptyNumber(deepValue) ? '' : deepValue}`.replace(\n      '.',\n      separationCharacter\n    );\n\n    return {\n      onChangeText: referencedCallback(`number.${k}`, (n: string) => {\n        // support numbers like 0,02\n        const { lastPart, hasLastPart, firstPart } =\n          splitNumberStringInParts(n);\n\n        if (hasLastPart) {\n          setLastCharacters((prev) => deepSet(prev, k, lastPart) as any);\n        } else {\n          setLastCharacters((prev) => deepSet(prev, k, undefined) as any);\n        }\n\n        if (n === '') {\n          changeValue(k, null as any, h);\n        } else {\n          const numberValue = Number(firstPart.replace(',', '.'));\n          changeValue(k, numberValue as any, h);\n        }\n      }),\n      value: `${value || ''}${deepGet(lastCharacters.current, k) || ''}`,\n    };\n  };\n}\n\nfunction splitNumberStringInParts(str: string) {\n  const lastCommaIndex = str.lastIndexOf(',');\n  const lastDotIndex = str.lastIndexOf('.');\n\n  const endsWithComma = str.endsWith(',');\n  const endsWithDot = str.endsWith('.');\n  const zeroAtEndOfString = countZeroAtEndOfString(str);\n  const endsWithZero = zeroAtEndOfString > 0;\n\n  const maxCommaOrDotIndex = Math.max(lastCommaIndex, lastDotIndex);\n\n  if (\n    endsWithComma ||\n    endsWithDot ||\n    (maxCommaOrDotIndex > 0 && zeroAtEndOfString > 0)\n  ) {\n    const zeroSliceIndex = str.length - zeroAtEndOfString;\n    let sliceIndex = endsWithZero ? zeroSliceIndex : maxCommaOrDotIndex;\n\n    // 1,10\n    if (zeroSliceIndex - 1 === maxCommaOrDotIndex) {\n      sliceIndex = maxCommaOrDotIndex;\n    }\n\n    return {\n      firstPart: str.slice(0, sliceIndex),\n      lastPart: str.slice(sliceIndex, str.length),\n      hasLastPart: true,\n    };\n  }\n\n  return {\n    firstPart: str,\n    lastPart: '',\n    hasLastPart: false,\n  };\n}\n\nfunction countZeroAtEndOfString(str: string) {\n  let count = 0;\n  const reversed = reverse(str);\n  for (let character of reversed) {\n    if (character !== '0') {\n      return count;\n    } else {\n      count++;\n    }\n  }\n  return count;\n}\n","import type {\n  BaseCustomizing,\n  Customizing,\n  CustomizingRaw,\n  DotNestedKeys,\n  FormInputBaseProps,\n  FormInputRawProps,\n  FormInputsType,\n  FormOptions,\n  FormTextInputProps,\n  GetFieldType,\n  ReferencedCallback,\n} from './types';\nimport { removeEmpty, useLatest } from './utils';\nimport { deepGet, deepSet } from './objectPath';\nimport { useNumberRaw } from './numberRaw';\nimport {\n  NativeSyntheticEvent,\n  Platform,\n  TextInputFocusEventData,\n  TextInputProps,\n} from 'react-native';\nimport * as React from 'react';\nimport type { UseErrorsReturnType } from './useErrors';\nimport type { UseLayoutReturnType } from './useLayout';\nimport type { UseValuesReturnType } from './useValues';\nimport type { UseTouchedReturnType } from './useTouched';\nimport type { UseFocusedOnceReturnType } from './useFocusedOnce';\nimport { UseNextAndSubmitRefReturnType } from './useNextAndSubmitRef';\n\nexport type UseInputsReturnType<T> = ReturnType<typeof useInputs<T>>;\n\nexport function useInputs<T>({\n  options,\n  locale,\n\n  referencedCallback,\n  error: {\n    errors,\n    updateHandler: updateErrorHandler,\n    hasError,\n    checkAndSetError,\n  },\n  layout: { onLayoutKey },\n  value: { values, setValues },\n  touch: { touched, setTouched },\n  focusedOnce: { focusedOnce, setFocusedOnce },\n  nextAndSubmit: { inputReferencer },\n}: {\n  options: FormOptions<T> | undefined;\n  locale: string;\n  referencedCallback: ReferencedCallback;\n  error: UseErrorsReturnType<T>;\n  layout: UseLayoutReturnType<T>;\n  value: UseValuesReturnType<T>;\n  touch: UseTouchedReturnType<T>;\n  focusedOnce: UseFocusedOnceReturnType<T>;\n  nextAndSubmit: UseNextAndSubmitRefReturnType;\n}) {\n  const onChange = useLatest(options?.onChange);\n  const enhance = useLatest(options?.enhance);\n\n  type InputT<ReturnType> = <K extends DotNestedKeys<T>>(\n    k: K,\n    h: Customizing<T, K> | undefined\n  ) => ReturnType;\n\n  const changeValue = React.useCallback(\n    <K extends DotNestedKeys<T>>(\n      k: K,\n      v: GetFieldType<T, K>,\n      h: Customizing<T, K> | CustomizingRaw<T, K> | undefined\n    ) => {\n      // set enhanced value or normal value\n      let enhancedV = h?.enhance?.(v, values.current) || v;\n      const newValues = deepSet(\n        // let enhance function edit form-state of fallback on normal values\n        h?.enhanceValues?.(enhancedV, values.current) || values.current,\n        k,\n        enhancedV\n      ) as T;\n      const enhancedNewValues = enhance.current\n        ? enhance.current(newValues, { previousValues: values.current })\n        : newValues;\n\n      (h as Customizing<T, K>)?.onChangeText?.(enhancedV as any);\n      (h as CustomizingRaw<T, K>)?.onChange?.(enhancedV as any);\n\n      setValues(enhancedNewValues);\n      checkAndSetError(\n        k,\n        h as BaseCustomizing<T, K>,\n        enhancedV as any,\n        enhancedNewValues\n      );\n      setTouched(k, true);\n\n      onChange.current?.(enhancedNewValues, {\n        touched: touched.current,\n        focusedOnce: focusedOnce.current,\n        errors: errors.current,\n      });\n    },\n    [\n      values,\n      enhance,\n      setValues,\n      checkAndSetError,\n      setTouched,\n      onChange,\n      touched,\n      focusedOnce,\n      errors,\n    ]\n  );\n\n  const blur: InputT<TextInputProps['onBlur']> = (k, h) =>\n    referencedCallback(\n      `blur.${k}`,\n      (e: NativeSyntheticEvent<TextInputFocusEventData>) => {\n        h?.onBlur?.(e);\n        setFocusedOnce(k, true);\n      }\n    );\n  const baseProps: InputT<FormInputBaseProps> = (k, h) => {\n    updateErrorHandler(k, h);\n    return removeEmpty({\n      testID: k,\n      onLayout: onLayoutKey(k),\n      onBlur: blur(k, h),\n      error: hasError(k),\n      errorMessage: deepGet(errors.current, k),\n      label: h?.label,\n    });\n  };\n\n  const text: InputT<FormTextInputProps> = (k, h) => ({\n    ...inputReferencer(k),\n    ...baseProps(k, h),\n    value: deepGet(values.current, k) || '',\n    onChangeText: referencedCallback(\n      `text.${k}`,\n      (n: GetFieldType<T, typeof k>) => changeValue(k, n, h)\n    ),\n  });\n\n  const numberRawCreator = useNumberRaw<T>({ locale, referencedCallback });\n  const numberRaw: InputT<FormTextInputProps> = (k, h) => ({\n    ...inputReferencer(k),\n    ...baseProps(k, h),\n    ...numberRawCreator(k, h, values.current, changeValue),\n  });\n\n  const number: InputT<FormTextInputProps> = (k, h) => ({\n    ...numberRaw(k, h),\n    keyboardType: 'number-pad',\n  });\n\n  const decimal: InputT<FormTextInputProps> = (k, h) => ({\n    ...numberRaw(k, h),\n    keyboardType: 'decimal-pad',\n  });\n\n  const numberText: InputT<FormTextInputProps> = (k, h) => ({\n    ...text(k, h),\n    keyboardType: 'number-pad',\n  });\n\n  const decimalText: InputT<FormTextInputProps> = (k, h) => ({\n    ...text(k, h),\n    keyboardType: 'decimal-pad',\n  });\n\n  const postalCode: InputT<FormTextInputProps> = (k, h) => ({\n    ...text(k, h),\n    autoCapitalize: 'characters',\n    textContentType: 'postalCode',\n    autoComplete: 'postal-code',\n    autoCorrect: false,\n  });\n\n  const streetAddress: InputT<FormTextInputProps> = (k, h) => ({\n    ...text(k, h),\n    autoCapitalize: 'words',\n    autoComplete: 'street-address',\n    autoCorrect: false,\n  });\n\n  const city: InputT<FormTextInputProps> = (k, h) => ({\n    ...text(k, h),\n    autoCapitalize: 'words',\n    textContentType: 'addressCity',\n    autoCorrect: false,\n  });\n\n  const telephone: InputT<FormTextInputProps> = (k, h) => ({\n    ...text(k, h),\n    textContentType: 'telephoneNumber',\n    autoComplete: 'tel',\n    keyboardType: 'phone-pad',\n    autoCorrect: false,\n  });\n\n  const name: InputT<FormTextInputProps> = (k, h) => ({\n    ...text(k, h),\n    autoCapitalize: 'words',\n    autoComplete: 'name',\n    autoCorrect: false,\n  });\n\n  const firstName = <K extends DotNestedKeys<T>>(\n    k: K,\n    h?: Customizing<T, K>\n  ): FormTextInputProps => ({\n    ...name(k, h),\n    autoComplete: 'given-name' as any, // https://reactnative.dev/docs/next/textinput#inputmode\n  });\n  const middleName = <K extends DotNestedKeys<T>>(\n    k: K,\n    h?: Customizing<T, K>\n  ): FormTextInputProps => ({\n    ...name(k, h),\n    autoComplete: 'name-middle\\n' as any, // https://reactnative.dev/docs/next/textinput#inputmode\n  });\n\n  const lastName = <K extends DotNestedKeys<T>>(\n    k: K,\n    h?: Customizing<T, K>\n  ): FormTextInputProps => ({\n    ...name(k, h),\n    autoComplete: 'family-name' as any, // https://reactnative.dev/docs/next/textinput#inputmode\n  });\n\n  const username: InputT<FormTextInputProps> = (k, h) => ({\n    ...text(k, h),\n    textContentType: 'username',\n    autoComplete: 'username',\n    autoCapitalize: 'none',\n    autoCorrect: false,\n    selectTextOnFocus: Platform.OS !== 'web',\n  });\n\n  const password: InputT<FormTextInputProps> = (k, h) => ({\n    ...text(k, h),\n    textContentType: 'password',\n    autoComplete: 'password',\n    secureTextEntry: true,\n    autoCorrect: false,\n    selectTextOnFocus: Platform.OS !== 'web',\n    label: h?.label,\n  });\n\n  const email: InputT<FormTextInputProps> = (k, h) => ({\n    ...text(k, h),\n    textContentType: 'emailAddress',\n    autoComplete: 'email',\n    keyboardType: 'email-address',\n    autoCapitalize: 'none',\n    autoCorrect: false,\n  });\n\n  const raw = <K extends DotNestedKeys<T>>(\n    k: K,\n    h?: CustomizingRaw<T, K>\n  ): FormInputRawProps<GetFieldType<T, K>> => ({\n    ...baseProps(k, h),\n    onChange: referencedCallback(`raw.${k}`, (n: GetFieldType<T, K>) => {\n      setTouched(k, true);\n      setFocusedOnce(k, true);\n      changeValue(k, n, h);\n    }),\n    value: deepGet(values.current, k),\n  });\n\n  const setField = React.useCallback(\n    <K extends DotNestedKeys<T>>(k: K, v: GetFieldType<T, K>) => {\n      changeValue(k, v, undefined);\n    },\n    [changeValue]\n  );\n\n  // @ts-expect-error\n  const inputs: FormInputsType<T> = {\n    text,\n    number,\n    decimal,\n    numberText,\n    decimalText,\n    postalCode,\n    streetAddress,\n    city,\n    telephone,\n    name,\n    firstName,\n    middleName,\n    lastName,\n    username,\n    password,\n    email,\n    raw,\n  };\n  return {\n    inputs: inputs as any, // any for infinite error loop typescript\n    setField,\n  };\n}\n","import type {\n  Customizing,\n  CustomizingRaw,\n  DotNestedKeys,\n  GetFieldType,\n} from './types';\nimport { getTranslation } from './translations/utils';\n\nexport default function checkError<T, K extends DotNestedKeys<T>>(\n  locale: string,\n  k: K,\n  h: Customizing<T, K> | CustomizingRaw<T, K> | undefined,\n  v: GetFieldType<T, K>,\n  allV: T\n) {\n  let err: boolean | string | undefined;\n\n  if (h) {\n    if (h?.required === true && !v) {\n      err = getTranslation(\n        locale,\n        'required'\n      )({\n        fieldKey: k,\n        label: h?.label,\n      });\n    } else if (h.minLength !== undefined && `${v}`.length < h.minLength) {\n      err = getTranslation(\n        locale,\n        'lengtShouldBeLongerThan'\n      )({\n        fieldKey: k,\n        label: h?.label,\n        requiredLength: h.minLength,\n      });\n    } else if (h.maxLength !== undefined && `${v}`.length > h.maxLength) {\n      err = getTranslation(\n        locale,\n        'lengthShouldBeShorterThan'\n      )({\n        fieldKey: k,\n        label: h?.label,\n        requiredLength: h.maxLength,\n      });\n    } else if (h.shouldFollowRegexes) {\n      for (let { regex, errorMessage } of h.shouldFollowRegexes) {\n        if (!regex.test(`${v}`)) {\n          err = getTranslation(\n            locale,\n            'shouldFollowRegex'\n          )({\n            fieldKey: k,\n            label: h?.label,\n            errorMessage,\n          });\n          break;\n        }\n      }\n    } else if (h.validate) {\n      err = h.validate?.(v, allV);\n    }\n  }\n  return err === true || err === undefined || err === null ? false : err;\n}\n","const hasTouch = typeof window !== 'undefined' && 'ontouchstart' in window;\n\n// const screenIsPortrait = window.matchMedia('(orientation: portrait)').matches;\n// return screenIsPortrait ? 'portrait' : 'landscape';\n// let heightPerOrientation: Record<string, number> = {\n//   [getOrientation()]: window.innerHeight,\n// };\n// window.addEventListener('resize', () => {\n//   const initialHeight = heightPerOrientation[getOrientation()];\n//   if (initialHeight) {\n//     if (window.innerHeight < initialHeight) {\n//       console.log('Virtual keyboard likely opened');\n//     } else {\n//       console.log('Virtual keyboard likely closed');\n//       initialHeight = window.innerHeight;\n//     }\n//   }\n// });\n\nconst screenIsLarge =\n  typeof window !== 'undefined' &&\n  window.matchMedia('(min-width: 1000px)').matches;\nconst hasVirtualKeyboard = hasTouch && !screenIsLarge;\nexport default hasVirtualKeyboard;\n","import { useReferencedCallback } from './utils';\nimport type { FormStateType, FormOptions } from './types';\nimport { defaultLocale } from './translations/utils';\n\nimport { useInputs } from './useInputs';\nimport { useSubmit } from './useSubmit';\nimport useLayout from './useLayout';\nimport useErrors from './useErrors';\nimport useTouched from './useTouched';\nimport useValues from './useValues';\nimport useFocusedOnce from './useFocusedOnce';\nimport useWasSubmitted from './useWasSubmitted';\nimport { FormInputsType } from './types';\nimport useNextAndSubmitRef from './useNextAndSubmitRef';\n\nexport default function useFormState<T>(\n  initialState: T,\n  options?: FormOptions<T>\n) {\n  const locale = options?.locale || defaultLocale;\n  const touch = useTouched<T>();\n  const value = useValues<T>(initialState);\n  const focusedOnce = useFocusedOnce<T>();\n  const wasSubmitted = useWasSubmitted();\n  const referencedCallback = useReferencedCallback();\n\n  const layout = useLayout<T>({\n    referencedCallback,\n    scrollViewRef: options?.scrollViewRef,\n  });\n\n  const error = useErrors<T>({\n    locale,\n    touch,\n    value,\n    focusedOnce,\n    wasSubmitted,\n  });\n  const submit = useSubmit<T>({\n    options,\n    layout,\n    error,\n    touch,\n    wasSubmitted,\n    value,\n    focusedOnce,\n  });\n\n  const nextAndSubmit = useNextAndSubmitRef<T>({ submit });\n\n  const input = useInputs<T>({\n    options,\n    locale,\n    error,\n    layout,\n    value,\n    touch,\n    focusedOnce,\n    referencedCallback,\n    nextAndSubmit,\n  });\n\n  const formState: FormStateType<T> = {\n    wasSubmitted: wasSubmitted.wasSubmitted.current,\n    hasErrors: error.hasErrors,\n    errors: error.errors.current,\n    hasError: error.hasError,\n\n    values: value.values.current,\n    setValues: value.setValues,\n\n    touched: touch.touched.current,\n    setTouched: touch.setTouched,\n\n    focusedOnce: focusedOnce.focusedOnce.current,\n\n    setField: input.setField,\n\n    submit: submit.submit,\n\n    formProps: {},\n  };\n\n  return [\n    formState as FormStateType<T>,\n    input.inputs as FormInputsType<T>,\n  ] as const;\n}\n","import useRefState from './useRefState';\nimport type { BooleanUtility, DotNestedKeys } from './types';\nimport * as React from 'react';\nimport { deepSet } from './objectPath';\n\nexport type UseTouchedReturnType<T> = ReturnType<typeof useTouched<T>>;\nexport default function useTouched<T>() {\n  const [touched, sTouched] = useRefState<BooleanUtility<T>>({});\n  const setTouched = React.useCallback(\n    <K extends DotNestedKeys<T>>(k: K, v: boolean) => {\n      sTouched((p) => deepSet(p, k, v) as any);\n    },\n    [sTouched]\n  );\n  return { touched, setTouched };\n}\n","import useRefState from './useRefState';\n\nexport type UseValuesReturnType<T> = ReturnType<typeof useValues<T>>;\nexport default function useValues<T>(initialState: T) {\n  const [values, setValues] = useRefState<T>(initialState);\n  return { values, setValues };\n}\n","import useRefState from './useRefState';\nimport type { BooleanUtility, DotNestedKeys } from './types';\nimport * as React from 'react';\nimport { deepSet } from './objectPath';\n\nexport type UseFocusedOnceReturnType<T> = ReturnType<typeof useFocusedOnce<T>>;\nexport default function useFocusedOnce<T>() {\n  const [focusedOnce, sFocusedOnce] = useRefState<BooleanUtility<T>>({});\n  const setFocusedOnce = React.useCallback(\n    <K extends DotNestedKeys<T>>(k: K, v: boolean) => {\n      sFocusedOnce((p) => deepSet(p, k, v) as any);\n    },\n    [sFocusedOnce]\n  );\n  return { focusedOnce, setFocusedOnce };\n}\n","import useRefState from './useRefState';\n\nexport type UseWasSubmittedReturnType = ReturnType<typeof useWasSubmitted>;\n\nexport default function useWasSubmitted() {\n  const [wasSubmitted, setWasSubmitted] = useRefState<boolean>(false);\n  return { wasSubmitted, setWasSubmitted };\n}\n","import type {\n  Customizing,\n  DotNestedKeys,\n  ReferencedCallback,\n  ScrollViewRef,\n} from './types';\nimport type { LayoutChangeEvent, LayoutRectangle } from 'react-native';\nimport * as React from 'react';\nimport { measure } from './layoutUtil';\n\nexport type UseLayoutReturnType<T> = ReturnType<typeof useLayout<T>>;\n\nexport default function useLayout<T>({\n  referencedCallback,\n  scrollViewRef,\n}: {\n  referencedCallback: ReferencedCallback;\n  scrollViewRef: ScrollViewRef;\n}) {\n  const layoutsRef = React.useRef<Record<string, LayoutRectangle>>({});\n  const onLayoutKey = <K extends DotNestedKeys<T>>(\n    k: K,\n    h?: Customizing<T, K>\n  ) =>\n    referencedCallback(`layout.${k}`, (e: LayoutChangeEvent) => {\n      h?.onLayout?.(e);\n\n      // we need to know the layouts of the fields to scroll to them (if there is an error)\n      if (scrollViewRef?.current) {\n        measure(e, scrollViewRef, (v) => {\n          layoutsRef.current = {\n            ...layoutsRef.current,\n            [k]: v,\n          };\n        });\n      }\n\n      // const value = deepGet(values.current, k);\n      // // this is not ideal, but we need to check the error after the layout is\n      // // calculated  because it's the only way to check if the value has an\n      // // error since we don't have the handlers at mount time\n      // checkError(k, h, value as any, values.current, true);\n    });\n  return {\n    onLayoutKey,\n    layoutsRef,\n  };\n}\n","import type { LayoutChangeEvent } from 'react-native';\nimport type { ScrollViewRefObject } from './types';\n\nexport function measure(\n  e: LayoutChangeEvent,\n  scrollViewRef: ScrollViewRefObject,\n  callback: (v: { x: number; y: number }) => void\n) {\n  const target = (e.nativeEvent as any).target;\n  const rect = target.getBoundingClientRect();\n  const scrollRect = (scrollViewRef.current as any)?.getBoundingClientRect?.();\n  callback({ x: rect.x, y: rect.y - scrollRect.y });\n}\n","import * as React from 'react';\nimport type { BaseCustomizing, DotNestedKeys, ErrorUtility } from './types';\nimport type { UseValuesReturnType } from './useValues';\nimport type { UseFocusedOnceReturnType } from './useFocusedOnce';\nimport type { UseTouchedReturnType } from './useTouched';\nimport { deepGet, deepSet } from './objectPath';\nimport type { UseWasSubmittedReturnType } from './useWasSubmitted';\nimport useRefState from './useRefState';\nimport { deepEqual } from 'fast-equals';\nimport checkError from './checkError';\nimport { checkErrorObject } from './utils';\n\nexport type UseErrorsReturnType<T> = ReturnType<typeof useErrors<T>>;\n\nexport default function useErrors<T>({\n  // options,\n  locale,\n  touch: { touched },\n  value: { values },\n  focusedOnce: { focusedOnce },\n  wasSubmitted: { wasSubmitted },\n}: {\n  locale: string;\n  value: UseValuesReturnType<T>;\n  focusedOnce: UseFocusedOnceReturnType<T>;\n  touch: UseTouchedReturnType<T>;\n  wasSubmitted: UseWasSubmittedReturnType;\n}) {\n  const handlers = React.useRef<Record<string, BaseCustomizing<T, any>>>({});\n  handlers.current = {};\n\n  const [errors, setErrors] = useRefState<ErrorUtility<T>>({});\n\n  const updateHandler = React.useCallback(\n    <K extends DotNestedKeys<T>>(\n      k: K,\n      v: BaseCustomizing<T, K> | undefined\n    ) => {\n      if (v) {\n        handlers.current[k] = v;\n      }\n    },\n    []\n  );\n\n  const checkAndSetError = React.useCallback(\n    <K extends DotNestedKeys<T>>(\n      key: K,\n      handler: BaseCustomizing<T, K>,\n      _oldValues: T,\n      newValues: T\n    ) => {\n      const err = checkError(\n        locale,\n        key,\n        handler,\n        deepGet(newValues, key),\n        newValues\n      );\n      const currentError = deepGet(errors.current, key);\n      if (currentError !== err) {\n        setErrors((prev) => {\n          return deepSet(prev, key, err) as any;\n        });\n      }\n    },\n    [errors, locale, setErrors]\n  );\n\n  const hasError = React.useCallback(\n    <K extends DotNestedKeys<T>>(k: K): boolean => {\n      const isTouched = deepGet(touched.current, k);\n      const isFocusedOnce = deepGet(focusedOnce.current, k);\n      const error = deepGet(errors.current, k);\n\n      if ((isTouched && isFocusedOnce) || wasSubmitted.current) {\n        const noError = error === false;\n        return !noError;\n      }\n      return false;\n    },\n    [errors, focusedOnce, touched, wasSubmitted]\n  );\n\n  React.useEffect(() => {\n    // loop trough object and if value is not a function but object loop through object\n    const errorsObject = Object.keys(handlers.current).reduce((acc, k) => {\n      const key = k as DotNestedKeys<T>;\n      const handler = handlers.current[key];\n      const value = deepGet(values.current, key);\n      const allValues = values.current;\n      const err = checkError(\n        locale,\n        key,\n        handler as any,\n        value as any,\n        allValues\n      );\n\n      acc = deepSet(acc, key, err);\n      return acc;\n    }, {} as any);\n\n    // prevent endless re-render loop\n    if (!deepEqual(errorsObject, errors.current)) {\n      setErrors(errorsObject);\n    }\n  });\n\n  return {\n    hasError,\n    hasErrors: checkErrorObject(errors.current),\n    updateHandler,\n    errors,\n    checkAndSetError,\n  };\n}\n","import * as React from 'react';\nimport { useLatest } from './utils';\nimport type { FormOptions } from './types';\nimport type { UseLayoutReturnType } from './useLayout';\nimport type { UseErrorsReturnType } from './useErrors';\nimport type { UseWasSubmittedReturnType } from './useWasSubmitted';\nimport type { UseValuesReturnType } from './useValues';\nimport type { UseTouchedReturnType } from './useTouched';\nimport type { UseFocusedOnceReturnType } from './useFocusedOnce';\nimport { deepGet } from './objectPath';\nimport { Keyboard } from 'react-native';\n\nexport type UseSubmitReturnType<T> = ReturnType<typeof useSubmit<T>>;\n\nexport function useSubmit<T>({\n  options,\n  layout,\n  error: { hasErrors, errors },\n  wasSubmitted,\n  value: { values },\n  touch: { touched },\n  focusedOnce: { focusedOnce },\n}: {\n  options: FormOptions<T> | undefined;\n  value: UseValuesReturnType<T>;\n  wasSubmitted: UseWasSubmittedReturnType;\n  layout: UseLayoutReturnType<T>;\n  error: UseErrorsReturnType<T>;\n  touch: UseTouchedReturnType<T>;\n  focusedOnce: UseFocusedOnceReturnType<T>;\n}) {\n  const scrollViewRef = options?.scrollViewRef;\n\n  const { layoutsRef } = layout;\n  const onSubmit = useLatest(options?.onSubmit);\n\n  return {\n    wasSubmitted,\n    submit: React.useCallback(() => {\n      Keyboard.dismiss();\n      wasSubmitted.setWasSubmitted(true);\n      // if it returns an object there are errors\n      if (hasErrors) {\n        if (scrollViewRef?.current) {\n          const errorKeys = Object.keys(layoutsRef.current).filter(\n            (k) => !!deepGet(errors.current, k)\n          )!;\n          const firstErrorY = Math.min(\n            ...errorKeys.map((key) => {\n              return layoutsRef.current?.[key]?.y || 0;\n            })\n          );\n\n          if (firstErrorY) {\n            const extraPaddingTop = 24;\n            scrollViewRef.current.scrollTo({\n              y: firstErrorY - extraPaddingTop,\n              animated: true,\n            });\n          }\n        }\n        return;\n      }\n\n      onSubmit.current?.(values.current, {\n        touched: touched.current,\n        focusedOnce: focusedOnce.current,\n      });\n    }, [\n      wasSubmitted,\n      hasErrors,\n      onSubmit,\n      values,\n      touched,\n      focusedOnce,\n      scrollViewRef,\n      layoutsRef,\n      errors,\n    ]),\n  };\n}\n","import * as React from 'react';\nimport { useReferencedCallback } from './utils';\nimport type { TextInput } from 'react-native';\nimport hasVirtualKeyboard from './hasVirtualKeyboard';\nimport useRefState from './useRefState';\nimport { UseSubmitReturnType } from './useSubmit';\n\nexport type UseNextAndSubmitRefReturnType = ReturnType<\n  typeof useNextAndSubmitRef\n>;\n\nexport default function useNextAndSubmitRef<T>({\n  submit,\n}: {\n  submit: UseSubmitReturnType<T>;\n}) {\n  const index = React.useRef<number>(0);\n  const [lastKey, setLastKey] = useRefState<string | undefined>(undefined);\n  const inputPerKey = React.useRef<Record<string, TextInput | null>>({});\n  const indexForKey = React.useRef<Record<string, number>>({});\n  const keyForIndex = React.useRef<Record<number, string>>({});\n  index.current = 0;\n  indexForKey.current = {};\n  keyForIndex.current = {};\n\n  const referencedCallback = useReferencedCallback();\n\n  React.useEffect(() => {\n    const allIndexes = Object.keys(indexForKey.current).map((k) =>\n      Number(indexForKey.current[k])\n    );\n    const maxIndex = Math.max(...allIndexes);\n    setLastKey(keyForIndex.current[maxIndex]);\n  }, [setLastKey, inputPerKey]);\n\n  const inputReferencer = (key: string) => {\n    indexForKey.current[key] = index.current;\n    keyForIndex.current[index.current] = key;\n    index.current = index.current + 1;\n\n    return {\n      ref: referencedCallback(`ref.${key}`, (e: TextInput) => {\n        inputPerKey.current[key] = e;\n      }),\n      onSubmitEditing: referencedCallback(`onSubmitEditing.${key}`, () => {\n        // check if is the last key or !virtualKeyboard\n        const allIndexes = Object.keys(indexForKey.current).map((k) =>\n          Number(indexForKey.current[k])\n        );\n        const inputPerIndex: Record<number, TextInput> = Object.keys(\n          inputPerKey.current\n        ).reduce(\n          (acc, k) => ({\n            ...acc,\n            [indexForKey.current[k]!]: inputPerKey.current[k],\n          }),\n          {}\n        );\n        const sortedIndexes = allIndexes.sort((a, b) => a - b);\n        const maxIndex = sortedIndexes[sortedIndexes.length - 1];\n        const currentIndex = indexForKey.current[key] || 0;\n        const currentInput = inputPerIndex[currentIndex];\n        const lastInput = maxIndex && inputPerIndex?.[maxIndex];\n        const isLastInput = lastInput === currentInput;\n        const hasPhysicalKeyboard = !hasVirtualKeyboard;\n        const shouldSubmit = isLastInput || hasPhysicalKeyboard;\n\n        if (shouldSubmit) {\n          submit.submit();\n          return;\n        }\n\n        const nextInputs = sortedIndexes\n          .filter((i) => i > currentIndex)\n          .map((higherIndex) => inputPerIndex[higherIndex])\n          .filter(Boolean);\n\n        const nextField = nextInputs.find((input) => {\n          const p = input?.props;\n\n          if ((p as any)?.disabled === true || p?.editable === false) {\n            return false;\n          }\n          // already sorted so the first one to hit above current index is the next field\n          return input;\n        });\n\n        nextField?.focus?.();\n        currentInput?.blur?.();\n      }),\n      blurOnSubmit: lastKey.current === key,\n      returnKeyType: lastKey.current === key ? 'send' : 'next',\n    };\n  };\n\n  return { inputReferencer };\n}\n","import * as React from 'react';\n\nexport type FormContextType = {};\nconst empty = {};\n\nexport const FormContext = React.createContext<FormContextType>(empty);\n","import * as React from 'react';\nimport { FormContext } from './FormContext';\n\nconst empty = {};\nexport default function Form({ children }: { children: any }) {\n  return <FormContext.Provider value={empty}>{children}</FormContext.Provider>;\n}\n","import * as React from 'react';\nimport {\n  Platform,\n  KeyboardAvoidingView,\n  ScrollViewProps,\n  ScrollView as ScrollViewNative,\n  StyleSheet,\n} from 'react-native';\n\nexport default function ScrollView({\n  children,\n  ...rest\n}: ScrollViewProps & { children: any }) {\n  if (Platform.OS === 'android') {\n    return <ScrollViewNative {...rest}>{children}</ScrollViewNative>;\n  }\n  return (\n    <KeyboardAvoidingView style={styles.full} behavior={'padding'}>\n      <ScrollViewNative {...rest}>{children}</ScrollViewNative>\n    </KeyboardAvoidingView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  full: {\n    flex: 1,\n  },\n});\n","import type { TranslationsType } from './utils';\n\nconst nl: TranslationsType = {\n  required: (params) => `${params.label || params.fieldKey} is verplicht`,\n  lengtShouldBeLongerThan: (params) =>\n    `${params.label || params.fieldKey} moet langer zijn dan ${\n      params.requiredLength\n    }`,\n  lengthShouldBeShorterThan: (params) =>\n    `${params.label || params.fieldKey} moet korter zijn dan ${\n      params.requiredLength\n    }`,\n  shouldFollowRegex: (params) =>\n    params.errorMessage ||\n    `${params.label || params.fieldKey} is niet in het juiste formaat`,\n};\nexport default nl;\n","import type { TranslationsType } from './utils';\n\nconst en: TranslationsType = {\n  required: (params) => `${params.label || params.fieldKey} is required`,\n  lengtShouldBeLongerThan: (params) =>\n    `${params.label || params.fieldKey} length should be longer than ${\n      params.requiredLength\n    }`,\n  lengthShouldBeShorterThan: (params) =>\n    `${params.label || params.fieldKey} length should be shorter than ${\n      params.requiredLength\n    }`,\n  shouldFollowRegex: (params) =>\n    params.errorMessage ||\n    `${params.label || params.fieldKey} is not in the right format`,\n};\nexport default en;\n","import { HelperText, TextInput } from 'react-native-paper';\nimport type { TextInputProps } from 'react-native';\nimport * as React from 'react';\n\nfunction TextInputWithError(\n  {\n    errorMessage,\n    ...rest\n  }: TextInputProps & {\n    errorMessage?: string;\n    mode?: any;\n    label?: string;\n    error?: boolean;\n  },\n  ref: any\n) {\n  console.log('render', rest.label);\n  return (\n    <>\n      {/*// @ts-ignore*/}\n      <TextInput {...rest} ref={ref} />\n      {/*// @ts-ignore*/}\n      <HelperText type=\"error\" visible={rest.error}>\n        {errorMessage || ' '}\n      </HelperText>\n    </>\n  );\n}\nexport default React.memo(React.forwardRef(TextInputWithError));\n","import * as React from 'react';\n\nimport { Platform, ScrollView, StyleSheet, View } from 'react-native';\nimport {\n  registerTranslation,\n  en,\n  nl,\n  Form,\n  useFormState,\n} from 'react-native-use-form';\nimport { Appbar, Button, Text } from 'react-native-paper';\nimport TextInputWithError from './TextInputWithError';\nimport { useRef } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { SegmentedButtons } from 'react-native-paper';\n\nregisterTranslation('en', en);\nregisterTranslation('nl', nl);\ntype AddressCompany = {\n  name: string;\n};\ntype AddressType = {\n  street: string;\n  houseNumber: string;\n  company?: AddressCompany | null;\n};\ntype FormType = {\n  email: string;\n  telephone: string;\n  password: string;\n  age: number | undefined;\n  money: number | undefined;\n  description: string | undefined;\n  postalCode: string | undefined;\n  postalCodeDisabled: string | undefined;\n  organization: {\n    name: string;\n    telephone: string;\n    revenue: number;\n  };\n  address?: AddressType | null;\n};\n\nenum Language {\n  EN = 'en',\n  NL = 'nl',\n}\nexport default function App() {\n  const [locale, setLocale] = React.useState<Language>(Language.EN);\n  const [hideRequiredField, setHideRequiredField] = React.useState(false);\n  const scrollViewRef = useRef<ScrollView>(null);\n  const [{ submit, formProps, hasError }, fh] = useFormState<FormType>(\n    {\n      email: '',\n      telephone: '',\n      password: '',\n      age: undefined,\n      money: undefined,\n      description: '',\n      postalCode: '',\n      postalCodeDisabled: '',\n      organization: {\n        name: '',\n        telephone: '',\n        revenue: 0,\n      },\n    },\n    {\n      scrollViewRef: scrollViewRef,\n      locale,\n      onChange: () => {\n        // TODO: fix enum in backend\n      },\n      onSubmit: (v, extra) => {\n        console.log('no errors, submit!', { v, extra });\n        // alert('no errors we can submit');\n      },\n    }\n  );\n\n  // console.log({ values, errors });\n  return (\n    <SafeAreaProvider>\n      <View style={styles.root}>\n        <Appbar.Header>\n          <Appbar.Content title=\"Form\" />\n        </Appbar.Header>\n        <ScrollView style={styles.scrollView} ref={scrollViewRef}>\n          <View style={styles.inner}>\n            <Text>Number format + default errors</Text>\n            <SegmentedButtons\n              multiSelect={false}\n              value={locale}\n              onValueChange={(v) => setLocale(v as Language)}\n              buttons={[\n                {\n                  value: Language.EN,\n                  label: 'English',\n                },\n                {\n                  value: Language.NL,\n                  label: 'Dutch',\n                },\n              ]}\n            />\n\n            <Form {...formProps}>\n              <TextInputWithError\n                mode=\"outlined\"\n                error={hasError('email')}\n                {...fh.email('email', {\n                  validate: (v) => {\n                    return looksLikeMail(v) ? true : 'Email-address is invalid';\n                  },\n                  label: 'Email',\n                })}\n              />\n              <Button onPress={() => setHideRequiredField((prev) => !prev)}>\n                hide required field\n              </Button>\n              {!hideRequiredField && (\n                <TextInputWithError\n                  mode=\"outlined\"\n                  {...fh.telephone('telephone', {\n                    required: true,\n                    minLength: 3,\n                    maxLength: 10,\n                    shouldFollowRegexes: [telephoneRegex],\n                    label: 'Telephone',\n                  })}\n                />\n              )}\n              <TextInputWithError\n                mode=\"outlined\"\n                {...fh.text('postalCode', {\n                  enhance: (v) => {\n                    return (v || '').toUpperCase();\n                  },\n                  label: 'Postalcode',\n                })}\n              />\n              <TextInputWithError\n                editable={false}\n                mode=\"outlined\"\n                {...fh.text('postalCode', {\n                  enhance: (v) => {\n                    return (v || '').toUpperCase();\n                  },\n                  label: 'Postalcode (disabled)',\n                })}\n              />\n\n              <TextInputWithError\n                mode=\"outlined\"\n                {...fh.password('password', {\n                  required: true,\n                  minLength: 3,\n                  maxLength: 10,\n                  label: 'Password',\n                })}\n              />\n\n              <TextInputWithError\n                mode=\"outlined\"\n                {...fh.number('age', {\n                  required: true,\n                  minLength: 3,\n                  maxLength: 10,\n                  label: 'Age',\n                })}\n              />\n              <TextInputWithError\n                mode=\"outlined\"\n                {...fh.decimal('money', {\n                  required: true,\n                  minLength: 3,\n                  maxLength: 10,\n                  label: 'Money bank account',\n                })}\n              />\n              <TextInputWithError\n                mode=\"outlined\"\n                {...fh.text('organization.telephone', {\n                  required: true,\n                  minLength: 3,\n                  maxLength: 10,\n                  shouldFollowRegexes: [telephoneRegex],\n                  label: 'Organization telephone',\n                })}\n              />\n              <TextInputWithError\n                mode=\"outlined\"\n                {...fh.number('organization.revenue', {\n                  required: true,\n                  minLength: 3,\n                  maxLength: 10,\n                  validate: (v) => {\n                    if (v < 10) {\n                      return 'revenue too low';\n                    }\n                    return undefined;\n                  },\n                  label: 'Organization revenue',\n                })}\n              />\n              <TextInputWithError\n                mode=\"outlined\"\n                {...fh.text('description', {\n                  label: 'Description',\n                  required: true,\n                  minLength: 3,\n                  maxLength: 10,\n                })}\n              />\n              {/*<AddressEdit {...fh.raw('address')} />*/}\n              {/*<AddressCompanyEdit {...fh.raw('address.company')} />*/}\n              <Button\n                mode=\"contained\"\n                onPress={submit}\n                style={{ marginTop: 24 }}\n              >\n                Save\n              </Button>\n            </Form>\n          </View>\n        </ScrollView>\n      </View>\n    </SafeAreaProvider>\n  );\n}\n\n// function AddressEdit({\n//   value,\n//   onChange,\n//   ...rest\n// }: {\n//   value: AddressType | null | undefined;\n//   onChange: (v: AddressType | null | undefined) => void;\n// }) {\n//   const [{ formProps }, fh] = useFormState<AddressType>(\n//     value || { street: '', houseNumber: '', company: { name: '' } },\n//     {\n//       onChange,\n//     }\n//   );\n//   return (\n//     <Surface {...rest}>\n//       <Title>Nested form</Title>\n//       <Form {...formProps}>\n//         <TextInputWithError\n//           mode=\"outlined\"\n//           label=\"Street\"\n//           {...fh.streetAddress('street', { required: true })}\n//         />\n//         <TextInputWithError\n//           mode=\"outlined\"\n//           label=\"House number\"\n//           {...fh.streetAddress('houseNumber')}\n//         />\n//       </Form>\n//     </Surface>\n//   );\n// }\n//\n// function AddressCompanyEdit({\n//   value,\n//   onChange,\n//   ...rest\n// }: {\n//   value: AddressCompany | undefined | null;\n//   onChange: (v: AddressCompany | undefined | null) => void;\n// }) {\n//   const [{ formProps }, fh] = useFormState<AddressCompany>(\n//     value || { name: '' },\n//     {\n//       onChange,\n//     }\n//   );\n//   return (\n//     <Surface {...rest} style={{ padding: 12 }}>\n//       <Title>Nested form</Title>\n//       <Form {...formProps}>\n//         <TextInputWithError\n//           mode=\"outlined\"\n//           label=\"Street\"\n//           {...fh.text('name')}\n//         />\n//       </Form>\n//     </Surface>\n//   );\n// }\n\nconst telephoneRegex = {\n  regex: new RegExp(/^\\d+$/),\n  errorMessage: 'Telephone is invalid',\n};\n\nfunction looksLikeMail(str: string): boolean {\n  let lastAtPos = str.lastIndexOf('@');\n  let lastDotPos = str.lastIndexOf('.');\n  return (\n    lastAtPos < lastDotPos &&\n    lastAtPos > 0 &&\n    str.indexOf('@@') === -1 &&\n    lastDotPos > 2 &&\n    str.length - lastDotPos > 2\n  );\n}\n\nconst styles = StyleSheet.create({\n  root: { flex: 1, maxHeight: Platform.OS === 'web' ? '100vh' : undefined },\n  scrollView: {\n    flex: 1,\n  },\n  inner: {\n    marginTop: 100,\n    marginLeft: 12,\n    marginRight: 12,\n    alignSelf: 'center',\n    width: 300,\n    paddingBottom: 500,\n  },\n});\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","var getProto = Object.getPrototypeOf ? (obj) => (Object.getPrototypeOf(obj)) : (obj) => (obj.__proto__);\nvar leafPrototypes;\n// create a fake namespace object\n// mode & 1: value is a module id, require it\n// mode & 2: merge all properties of value into the ns\n// mode & 4: return value when already ns object\n// mode & 16: return value when it's Promise-like\n// mode & 8|1: behave like require\n__webpack_require__.t = function(value, mode) {\n\tif(mode & 1) value = this(value);\n\tif(mode & 8) return value;\n\tif(typeof value === 'object' && value) {\n\t\tif((mode & 4) && value.__esModule) return value;\n\t\tif((mode & 16) && typeof value.then === 'function') return value;\n\t}\n\tvar ns = Object.create(null);\n\t__webpack_require__.r(ns);\n\tvar def = {};\n\tleafPrototypes = leafPrototypes || [null, getProto({}), getProto([]), getProto(getProto)];\n\tfor(var current = mode & 2 && value; typeof current == 'object' && !~leafPrototypes.indexOf(current); current = getProto(current)) {\n\t\tObject.getOwnPropertyNames(current).forEach((key) => (def[key] = () => (value[key])));\n\t}\n\tdef['default'] = () => (value);\n\t__webpack_require__.d(ns, def);\n\treturn ns;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.p = \"/\";","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t179: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [918], () => (__webpack_require__(9484)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["useReferencedCallback","callbacks","map","React","Map","set","key","value","current","has","get","useMap","callback","apply","arguments","useLatest","ref","checkErrorObject","errors","keys","Object","isObject","val","translationsPerLocale","defaultLocale","getTranslation","locale","_translationsPerLocal","l","console","warn","translation","registerTranslation","translations","_hasOwnProperty","prototype","hasOwnProperty","hasShallowProperty","obj","prop","Array","isArray","call","isEmpty","isNumber","length","isString","i","getKey","intKey","parseInt","toString","clone","createIfEmpty","assumeArray","slice","target","source","assignToObj","_changeImmutable","dest","src","path","changeCallback","split","currentPath","deepGet","includes","nextObj","getShallowProperty","deepSet","clonedObj","finalPath","bind","initialState","blockIfUnmounted","undefined","mounted","useMounted","_React$useState","_React$useState2","_slicedToArray","reactState","setReactState","state","setState","arg","useNumberRaw","_ref","referencedCallback","_useRefState","useRefState","_useRefState2","lastCharacters","setLastCharacters","separationCharacter","Intl","NumberFormat","format","k","h","values","changeValue","str","deepValue","replace","onChangeText","n","_splitNumberStringInP","lastCommaIndex","lastIndexOf","lastDotIndex","endsWithComma","endsWith","endsWithDot","zeroAtEndOfString","count","reversed","character","reverse","countZeroAtEndOfString","endsWithZero","maxCommaOrDotIndex","Math","max","zeroSliceIndex","sliceIndex","firstPart","lastPart","hasLastPart","splitNumberStringInParts","prev","numberValue","Number","useInputs","options","_ref$error","error","updateErrorHandler","updateHandler","hasError","checkAndSetError","onLayoutKey","layout","_ref$value","setValues","_ref$touch","touch","touched","setTouched","_ref$focusedOnce","focusedOnce","setFocusedOnce","inputReferencer","nextAndSubmit","onChange","enhance","v","enhancedV","newValues","enhanceValues","enhancedNewValues","previousValues","blur","e","onBlur","baseProps","testID","onLayout","errorMessage","label","fromEntries","entries","filter","_ref2","text","_objectSpread","numberRawCreator","numberRaw","name","autoCapitalize","autoComplete","autoCorrect","setField","inputs","number","keyboardType","decimal","numberText","decimalText","postalCode","textContentType","streetAddress","city","telephone","firstName","middleName","lastName","username","selectTextOnFocus","Platform","password","secureTextEntry","email","raw","checkError","allV","err","required","minLength","fieldKey","requiredLength","maxLength","shouldFollowRegexes","regex","test","validate","hasTouch","window","screenIsLarge","matchMedia","matches","useFormState","sTouched","p","useTouched","useValues","sFocusedOnce","useFocusedOnce","wasSubmitted","setWasSubmitted","useWasSubmitted","scrollViewRef","layoutsRef","_scrollViewRef$curren","rect","nativeEvent","getBoundingClientRect","scrollRect","x","y","measure","_defineProperty","useLayout","handlers","setErrors","handler","_oldValues","isTouched","isFocusedOnce","errorsObject","reduce","acc","allValues","deepEqual","hasErrors","useErrors","submit","onSubmit","Keyboard","errorKeys","firstErrorY","min","_toConsumableArray","_layoutsRef$current","_layoutsRef$current$k","scrollTo","animated","useSubmit","index","lastKey","setLastKey","inputPerKey","indexForKey","keyForIndex","allIndexes","maxIndex","onSubmitEditing","inputPerIndex","sortedIndexes","sort","a","b","currentIndex","currentInput","hasVirtualKeyboard","nextField","higherIndex","Boolean","find","input","props","disabled","editable","focus","blurOnSubmit","returnKeyType","useNextAndSubmitRef","formProps","FormContext","empty","Form","children","_jsx","Provider","StyleSheet","full","flex","params","lengtShouldBeLongerThan","lengthShouldBeShorterThan","shouldFollowRegex","rest","_objectWithoutProperties","_excluded","log","_jsxs","_Fragment","TextInput","HelperText","type","visible","Language","App","EN","setLocale","_React$useState3","_React$useState4","hideRequiredField","setHideRequiredField","useRef","_useFormState","age","money","description","postalCodeDisabled","organization","revenue","extra","_useFormState2","_useFormState2$","fh","SafeAreaProvider","View","style","styles","root","Appbar","title","ScrollView","scrollView","inner","Text","SegmentedButtons","multiSelect","onValueChange","buttons","NL","TextInputWithError","mode","lastAtPos","lastDotPos","indexOf","looksLikeMail","Button","onPress","telephoneRegex","toUpperCase","marginTop","en","nl","RegExp","maxHeight","marginLeft","marginRight","alignSelf","width","paddingBottom","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","exports","module","__webpack_modules__","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","r","getter","__esModule","d","leafPrototypes","getProto","getPrototypeOf","t","this","then","ns","create","def","getOwnPropertyNames","forEach","definition","o","defineProperty","enumerable","g","globalThis","Function","Symbol","toStringTag","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","data","moreModules","runtime","some","id","chunkLoadingGlobal","self","push","__webpack_exports__"],"sourceRoot":""}